name: github-actions
on: [push]
jobs:
  container-job:
    runs-on: ubuntu-latest
    container: node:10.18-jessie
    services:
      postgres:
        image: postgres
    steps:
      - name: Check out repository code
        uses: actions/checkout@v3
      - name: Install dependencies
        run: npm ci
      - name: Connect to PostgreSQL
        run: node client.js
        env:
          POSTGRES_HOST: postgres
          POSTGRES_PORT: 5432

      ## Setup Apache2 and PHP8.1
      - run: |
          name: Setup Apache2 and PHP8.1
          command: |
            sudo add-apt-repository ppa:ondrej/php -y
            sudo apt update
            sudo apt upgrade
            sudo apt install -yqq apache2 php8.1 libapache2-mod-php8.1 php8.1-mbstring php8.1-mysql php8.1-xml php8.1-cgi php8.1-cli php8.1-common php8.1-curl php8.1-gd php8.1-imap php8.1-intl php8.1-pspell php8.1-sqlite3 php8.1-tidy php8.1-opcache php8.1-yaml php8.1-bz2 php8.1-readline php8.1-xmlrpc php8.1-enchant php8.1-xsl php8.1-zip php8.1-bcmath php-pear
            sudo a2enmod php8.1
            sudo a2enmod headers rewrite env mime expires ssl
            sudo update-alternatives --set php /usr/bin/php8.1
            echo -e "memory_limit = -1" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "max_execution_time = 1200" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "error_reporting = E_ALL" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "max_input_time = 180" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "max_input_vars = 10000" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "post_max_size = 64M" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "upload_max_filesize = 32M" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            echo -e "max_file_uploads = 40" | sudo tee /etc/php/8.1/apache2/php.ini > /dev/null
            sudo service apache2 restart

       ## Install composer ~2
      - run: |
          name: Install composer ~2
          command: |
            sudo curl -sS https://getcomposer.org/installer | sudo php -- --install-dir=/usr/local/bin/ --filename=composer --2;
            composer config -g github-oauth.github.com $GITHUB_TOKEN

      ## Install node js, npm, yarn, and gulp
      - run: |
          name: Install node js
          command: |
            curl -sL https://deb.nodesource.com/setup_12.x | sudo bash -
            sudo apt install -y nodejs 
            sudo npm install -g yarn
            sudo npm install gulp-cli -g ;
            sudo npm install gulp -D ;

      ## Install Java.
      - run: |
          name: Install Java
          command: |
            sudo apt update
            sudo apt install -y openjdk-11-jre openjdk-11-jre-headless openjdk-11-jdk openjdk-11-jdk-headless

      ## Install/Update Google Chrome browser.
      - run: |
          name: Install/Update Google Chrome browser
          command: |
            sudo apt-get install libappindicator1 fonts-liberation libgbm1 libgtk-3-0 xdg-utils
            export CHROME_BIN=/usr/bin/google-chrome
            wget https://dl.google.com/linux/direct/google-chrome-stable_current_amd64.deb
            sudo dpkg -i google-chrome-stable_current_amd64.deb
            rm google-chrome-stable_current_amd64.deb

      ## Install/Update Chrome Driver.
      - run: |
          name: Install/Update Chrome Driver
          command: |
            CHROME_DRIVER_VERSION=$(wget -qO- chromedriver.storage.googleapis.com/LATEST_RELEASE);
            echo $CHROME_DRIVER_VERSION;
            wget http://chromedriver.storage.googleapis.com/$CHROME_DRIVER_VERSION/chromedriver_linux64.zip
            unzip chromedriver_linux64.zip
            sudo chmod +x chromedriver
            sudo mv -f chromedriver /usr/bin/
            rm chromedriver_linux64.zip

      ## List tools versions.
      - run: |
          name: List tools versions
          command: |
            php --version
            node --version
            yarn --version
            gulp --version
            java -version
            google-chrome --version
            chromedriver --version
            mysql --version
            composer --version
            php -m
            php -i | grep "Loaded Configuration File"
            php --ini

      ## Install Webship-js.
      - run: |
          name: Install Webship-js 
          command: |
            if [ -d "/var/www/html/test" ]; then
              sudo rm -rf /var/www/html/test -vvv
            fi
            cd /var/www/
            sudo chmod 775 -R .
            sudo chown www-data:circleci -R .
            mkdir /var/www/html/test
            cd /var/www/html/test/
            sudo chmod 775 .
            sudo chown www-data:circleci .
            git clone --branch '1.0.x' git@github.com:webship/webship-js.git /var/www/html/test/webship-code
            cp -r /var/www/html/test/webship-code /var/www/html/test/webship-js
            cd /var/www/html/test/webship-js

      ## Run Selenium Standalone server.
      - run: |
          name: Run Selenium Standalone server
          command: |
            if [[ ! -f /home/circleci/selenium-server-standalone-3.141.59.jar ]]; then wget -O /home/circleci/selenium-server-standalone-3.141.59.jar https://github.com/SeleniumHQ/selenium/releases/download/selenium-3.141.59/selenium-server-standalone-3.141.59.jar; fi
            cd /home/circleci/
            java -jar selenium-server-standalone-3.141.59.jar -port 4444
          background: true

       ## Automated Functional Acceptance Testing
      - run: |
          name: Automated Functional Acceptance Testing
          no_output_timeout: 30m
          command: |
            cd /var/www/html/test/webship-js
            yarn install
            yarn test